# ElasticGraph MCP Server
# Provides MCP (Model Context Protocol) support for ElasticGraph projects

[project]
name = "elasticgraph-mcp-server"
version = "0.1.2"
description = "MCP Server for ElasticGraph to allow Goose, Cursor, etc to create and manage your ElasticGraph project."
readme = "README.md"
requires-python = "~=3.13"
license = "MIT"
authors = [
    { name = "Brian Sigafoos", email = "briansigafoos@block.xyz" },
]
keywords = ["elasticgraph", "mcp", "cursor", "windsurf", "model-context-protocol", "claude", "cline"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "httpx~=0.28.1",
    "mcp[cli]~=1.10.1",
    "packaging~=25.0",
]

[project.scripts]
elasticgraph-mcp-server = "elasticgraph_mcp:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["."]
package-dir = "src"

[tool.hatch.build.targets.wheel]
packages = ["src/elasticgraph_mcp"]

[dependency-groups]
dev = [
    "ruff~=0.11.2",
    "pytest~=8.3.5",
    "pytest-cov~=6.0.0",
    "pre-commit~=4.2.0",
    "pytest-asyncio~=0.25.3",
]

[tool.ruff]
target-version = "py313"
line-length = 120

# Lint rules legend: https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "B"]
fixable = ["ALL"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --tb=short"

[project.urls]
Homepage = "https://block.github.io/elasticgraph/"
Repository = "https://github.com/block/elasticgraph"
