# This JSON schema file contains internal ElasticGraph metadata and should be considered private.
# The unversioned JSON schema file is public and intended to be provided to publishers.
#
# Generated by `rake schema_artifacts:dump`.
# DO NOT EDIT BY HAND. Any edits will be lost the next time the rake task is run.
---
"$schema": http://json-schema.org/draft-07/schema#
json_schema_version: 1
"$defs":
  ElasticGraphEventEnvelope:
    type: object
    description: Required by ElasticGraph to wrap every data event.
    properties:
      op:
        description: Indicates what type of operation the event represents. For now,
          only `upsert` is supported, but we plan to support other operations in the
          future.
        type: string
        enum:
        - upsert
      type:
        description: The type of object present in `record`.
        type: string
        enum:
        - Address
        - Component
        - ElectricalPart
        - Manufacturer
        - MechanicalPart
        - Sponsor
        - Team
        - Widget
        - WidgetWorkspace
      id:
        description: The unique identifier of the record.
        type: string
        maxLength: 8191
      version:
        description: Used to handle duplicate and out-of-order events. When ElasticGraph
          ingests multiple events for the same `type` and `id`, the one with the largest
          `version` will "win".
        type: integer
        minimum: 0
        maximum: 9223372036854775807
      record:
        description: The record of this event. The payload of this field must match
          the JSON schema of the named `type`.
        type: object
      latency_timestamps:
        description: Timestamps from which ElasticGraph measures indexing latency.
          The `ElasticGraphIndexingLatencies` log message produced for each event
          will include a measurement from each timestamp included in this map.
        type: object
        additionalProperties: false
        patternProperties:
          description: A timestamp from which ElasticGraph will measure indexing latency.
            The timestamp name must end in `_at`.
          "^\\w+_at$":
            type: string
            format: date-time
      json_schema_version:
        description: The version of the JSON schema the publisher was using when the
          event was published. ElasticGraph will use the JSON schema matching this
          version to process the event.
        const: 1
      message_id:
        description: The optional ID of the message containing this event from whatever
          messaging system is being used between the publisher and the ElasticGraph
          indexer.
        type: string
    additionalProperties: false
    required:
    - op
    - type
    - id
    - version
    - json_schema_version
    if:
      properties:
        op:
          const: upsert
    then:
      required:
      - record
  Address:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      full_address:
        allOf:
        - "$ref": "#/$defs/String"
        - maxLength: 8191
        ElasticGraph:
          type: String!
          nameInIndex: full_address
      timestamps:
        anyOf:
        - "$ref": "#/$defs/AddressTimestamps"
        - type: 'null'
        ElasticGraph:
          type: AddressTimestamps
          nameInIndex: timestamps
      geo_location:
        anyOf:
        - "$ref": "#/$defs/GeoLocation"
        - type: 'null'
        ElasticGraph:
          type: GeoLocation
          nameInIndex: geo_location
      shapes:
        type: array
        items:
          "$ref": "#/$defs/GeoShape"
        ElasticGraph:
          type: "[GeoShape!]!"
          nameInIndex: shapes
      manufacturer_id:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: manufacturer_id
      __typename:
        type: string
        const: Address
        default: Address
    required:
    - id
    - full_address
    - timestamps
    - geo_location
    - shapes
    - manufacturer_id
  AddressTimestamps:
    type: object
    properties:
      created_at:
        anyOf:
        - "$ref": "#/$defs/DateTime"
        - type: 'null'
        ElasticGraph:
          type: DateTime
          nameInIndex: created_at
      __typename:
        type: string
        const: AddressTimestamps
        default: AddressTimestamps
    required:
    - created_at
  Affiliations:
    type: object
    properties:
      sponsorships_nested:
        type: array
        items:
          "$ref": "#/$defs/Sponsorship"
        ElasticGraph:
          type: "[Sponsorship!]!"
          nameInIndex: sponsorships_nested
      sponsorships_object:
        type: array
        items:
          "$ref": "#/$defs/Sponsorship"
        ElasticGraph:
          type: "[Sponsorship!]!"
          nameInIndex: sponsorships_object
      __typename:
        type: string
        const: Affiliations
        default: Affiliations
    required:
    - sponsorships_nested
    - sponsorships_object
  Boolean:
    type: boolean
  Color:
    type: string
    enum:
    - RED
    - BLUE
    - GREEN
  Company:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      stock_ticker:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: stock_ticker
      __typename:
        type: string
        const: Company
        default: Company
    required:
    - name
    - stock_ticker
  Component:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      created_at:
        "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: DateTime!
          nameInIndex: created_at
      position:
        "$ref": "#/$defs/Position"
        ElasticGraph:
          type: Position!
          nameInIndex: position
      tags:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: tags
      part_ids:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        ElasticGraph:
          type: "[ID!]!"
          nameInIndex: part_ids
      __typename:
        type: string
        const: Component
        default: Component
    required:
    - id
    - name
    - created_at
    - position
    - tags
    - part_ids
  Date:
    type: string
    format: date
  DateTime:
    type: string
    format: date-time
  ElectricalPart:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      created_at:
        "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: DateTime!
          nameInIndex: created_at
      voltage:
        "$ref": "#/$defs/Int"
        ElasticGraph:
          type: Int!
          nameInIndex: voltage
      manufacturer_id:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: manufacturer_id
      __typename:
        type: string
        const: ElectricalPart
        default: ElectricalPart
    required:
    - id
    - name
    - created_at
    - voltage
    - manufacturer_id
  Float:
    type: number
  GeoLocation:
    type: object
    properties:
      latitude:
        allOf:
        - "$ref": "#/$defs/Float"
        - minimum: -90
          maximum: 90
        ElasticGraph:
          type: Float!
          nameInIndex: lat
      longitude:
        allOf:
        - "$ref": "#/$defs/Float"
        - minimum: -180
          maximum: 180
        ElasticGraph:
          type: Float!
          nameInIndex: lon
      __typename:
        type: string
        const: GeoLocation
        default: GeoLocation
    required:
    - latitude
    - longitude
  GeoShape:
    type: object
    properties:
      type:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: type
      coordinates:
        type: array
        items:
          "$ref": "#/$defs/Float"
        ElasticGraph:
          type: "[Float!]!"
          nameInIndex: coordinates
      __typename:
        type: string
        const: GeoShape
        default: GeoShape
    required:
    - type
    - coordinates
  ID:
    type: string
  Int:
    type: integer
    minimum: -2147483648
    maximum: 2147483647
  Inventor:
    required:
    - __typename
    oneOf:
    - "$ref": "#/$defs/Person"
    - "$ref": "#/$defs/Company"
  JsonSafeLong:
    type: integer
    minimum: -9007199254740991
    maximum: 9007199254740991
  LocalTime:
    type: string
    pattern: "^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9](\\.[0-9]{1,3})?$"
  LongString:
    type: integer
    minimum: -9223372036854775808
    maximum: 9223372036854775807
  Manufacturer:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      created_at:
        "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: DateTime!
          nameInIndex: created_at
      __typename:
        type: string
        const: Manufacturer
        default: Manufacturer
    required:
    - id
    - name
    - created_at
  Material:
    type: string
    enum:
    - ALLOY
    - CARBON_FIBER
  MechanicalPart:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      created_at:
        "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: DateTime!
          nameInIndex: created_at
      material:
        anyOf:
        - "$ref": "#/$defs/Material"
        - type: 'null'
        ElasticGraph:
          type: Material
          nameInIndex: material
      manufacturer_id:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: manufacturer_id
      __typename:
        type: string
        const: MechanicalPart
        default: MechanicalPart
    required:
    - id
    - name
    - created_at
    - material
    - manufacturer_id
  Money:
    type: object
    properties:
      currency:
        allOf:
        - "$ref": "#/$defs/String"
        - maxLength: 8191
        ElasticGraph:
          type: String!
          nameInIndex: currency
      amount_cents:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: amount_cents
      __typename:
        type: string
        const: Money
        default: Money
    required:
    - currency
    - amount_cents
  NamedInventor:
    required:
    - __typename
    oneOf:
    - "$ref": "#/$defs/Person"
    - "$ref": "#/$defs/Company"
  Person:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      nationality:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: nationality
      __typename:
        type: string
        const: Person
        default: Person
    required:
    - name
    - nationality
  Player:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      nicknames:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: nicknames
      affiliations:
        "$ref": "#/$defs/Affiliations"
        ElasticGraph:
          type: Affiliations!
          nameInIndex: affiliations
      seasons_nested:
        type: array
        items:
          "$ref": "#/$defs/PlayerSeason"
        ElasticGraph:
          type: "[PlayerSeason!]!"
          nameInIndex: seasons_nested
      seasons_object:
        type: array
        items:
          "$ref": "#/$defs/PlayerSeason"
        ElasticGraph:
          type: "[PlayerSeason!]!"
          nameInIndex: seasons_object
      __typename:
        type: string
        const: Player
        default: Player
    required:
    - name
    - nicknames
    - affiliations
    - seasons_nested
    - seasons_object
  PlayerSeason:
    type: object
    properties:
      year:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: year
      games_played:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: games_played
      awards:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: awards
      __typename:
        type: string
        const: PlayerSeason
        default: PlayerSeason
    required:
    - year
    - games_played
    - awards
  Position:
    type: object
    properties:
      x:
        "$ref": "#/$defs/Float"
        ElasticGraph:
          type: Float!
          nameInIndex: x
      "y":
        "$ref": "#/$defs/Float"
        ElasticGraph:
          type: Float!
          nameInIndex: "y"
      __typename:
        type: string
        const: Position
        default: Position
    required:
    - x
    - "y"
  Size:
    type: string
    enum:
    - SMALL
    - MEDIUM
    - LARGE
  Sponsor:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      __typename:
        type: string
        const: Sponsor
        default: Sponsor
    required:
    - id
    - name
  Sponsorship:
    type: object
    properties:
      sponsor_id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: sponsor_id
      annual_total:
        "$ref": "#/$defs/Money"
        ElasticGraph:
          type: Money!
          nameInIndex: annual_total
      __typename:
        type: string
        const: Sponsorship
        default: Sponsorship
    required:
    - sponsor_id
    - annual_total
  String:
    type: string
  Team:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      league:
        allOf:
        - "$ref": "#/$defs/String"
        - maxLength: 8191
          pattern: "[^ \t\n]+"
        ElasticGraph:
          type: String!
          nameInIndex: league
      country_code:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: country_code
      formed_on:
        "$ref": "#/$defs/Date"
        ElasticGraph:
          type: Date!
          nameInIndex: formed_on
      current_name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: current_name
      past_names:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: past_names
      won_championships_at:
        type: array
        items:
          "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: "[DateTime!]!"
          nameInIndex: won_championships_at
      details:
        anyOf:
        - "$ref": "#/$defs/TeamDetails"
        - type: 'null'
        ElasticGraph:
          type: TeamDetails
          nameInIndex: details
      stadium_location:
        anyOf:
        - "$ref": "#/$defs/GeoLocation"
        - type: 'null'
        ElasticGraph:
          type: GeoLocation
          nameInIndex: stadium_location
      forbes_valuations:
        type: array
        items:
          "$ref": "#/$defs/JsonSafeLong"
        ElasticGraph:
          type: "[JsonSafeLong!]!"
          nameInIndex: forbes_valuations
      forbes_valuation_moneys_nested:
        type: array
        items:
          "$ref": "#/$defs/Money"
        ElasticGraph:
          type: "[Money!]!"
          nameInIndex: forbes_valuation_moneys_nested
      forbes_valuation_moneys_object:
        type: array
        items:
          "$ref": "#/$defs/Money"
        ElasticGraph:
          type: "[Money!]!"
          nameInIndex: forbes_valuation_moneys_object
      current_players_nested:
        type: array
        items:
          "$ref": "#/$defs/Player"
        ElasticGraph:
          type: "[Player!]!"
          nameInIndex: current_players_nested
      current_players_object:
        type: array
        items:
          "$ref": "#/$defs/Player"
        ElasticGraph:
          type: "[Player!]!"
          nameInIndex: current_players_object
      seasons_nested:
        type: array
        items:
          "$ref": "#/$defs/TeamSeason"
        ElasticGraph:
          type: "[TeamSeason!]!"
          nameInIndex: seasons_nested
      seasons_object:
        type: array
        items:
          "$ref": "#/$defs/TeamSeason"
        ElasticGraph:
          type: "[TeamSeason!]!"
          nameInIndex: seasons_object
      nested_fields:
        anyOf:
        - "$ref": "#/$defs/TeamNestedFields"
        - type: 'null'
        ElasticGraph:
          type: TeamNestedFields
          nameInIndex: the_nested_fields
      nested_fields2:
        anyOf:
        - "$ref": "#/$defs/TeamNestedFields"
        - type: 'null'
        ElasticGraph:
          type: TeamNestedFields
          nameInIndex: nested_fields2
      __typename:
        type: string
        const: Team
        default: Team
    required:
    - id
    - league
    - country_code
    - formed_on
    - current_name
    - past_names
    - won_championships_at
    - details
    - stadium_location
    - forbes_valuations
    - forbes_valuation_moneys_nested
    - forbes_valuation_moneys_object
    - current_players_nested
    - current_players_object
    - seasons_nested
    - seasons_object
    - nested_fields
    - nested_fields2
  TeamDetails:
    type: object
    properties:
      uniform_colors:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: uniform_colors
      count:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: count
      __typename:
        type: string
        const: TeamDetails
        default: TeamDetails
    required:
    - uniform_colors
    - count
  TeamNestedFields:
    type: object
    properties:
      forbes_valuation_moneys:
        type: array
        items:
          "$ref": "#/$defs/Money"
        ElasticGraph:
          type: "[Money!]!"
          nameInIndex: forbes_valuation_moneys
      current_players:
        type: array
        items:
          "$ref": "#/$defs/Player"
        ElasticGraph:
          type: "[Player!]!"
          nameInIndex: current_players
      seasons:
        type: array
        items:
          "$ref": "#/$defs/TeamSeason"
        ElasticGraph:
          type: "[TeamSeason!]!"
          nameInIndex: the_seasons
      __typename:
        type: string
        const: TeamNestedFields
        default: TeamNestedFields
    required:
    - forbes_valuation_moneys
    - current_players
    - seasons
  TeamRecord:
    type: object
    properties:
      wins:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: win_count
      losses:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: loss_count
      last_win_on:
        anyOf:
        - "$ref": "#/$defs/Date"
        - type: 'null'
        ElasticGraph:
          type: Date
          nameInIndex: last_win_date
      first_win_on:
        anyOf:
        - "$ref": "#/$defs/Date"
        - type: 'null'
        ElasticGraph:
          type: Date
          nameInIndex: first_win_on
      __typename:
        type: string
        const: TeamRecord
        default: TeamRecord
    required:
    - wins
    - losses
    - last_win_on
    - first_win_on
  TeamSeason:
    type: object
    properties:
      record:
        anyOf:
        - "$ref": "#/$defs/TeamRecord"
        - type: 'null'
        ElasticGraph:
          type: TeamRecord
          nameInIndex: the_record
      year:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: year
      notes:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: notes
      count:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: count
      started_at:
        anyOf:
        - "$ref": "#/$defs/DateTime"
        - type: 'null'
        ElasticGraph:
          type: DateTime
          nameInIndex: started_at
      won_games_at:
        type: array
        items:
          "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: "[DateTime!]!"
          nameInIndex: won_games_at
      was_shortened:
        anyOf:
        - "$ref": "#/$defs/Boolean"
        - type: 'null'
        ElasticGraph:
          type: Boolean
          nameInIndex: was_shortened
      players_nested:
        type: array
        items:
          "$ref": "#/$defs/Player"
        ElasticGraph:
          type: "[Player!]!"
          nameInIndex: players_nested
      players_object:
        type: array
        items:
          "$ref": "#/$defs/Player"
        ElasticGraph:
          type: "[Player!]!"
          nameInIndex: players_object
      __typename:
        type: string
        const: TeamSeason
        default: TeamSeason
    required:
    - record
    - year
    - notes
    - count
    - started_at
    - won_games_at
    - was_shortened
    - players_nested
    - players_object
  Untyped:
    type:
    - array
    - boolean
    - integer
    - number
    - object
    - string
  Widget:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      workspace_id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
          pattern: "[^ \t\n]+"
        ElasticGraph:
          type: ID!
          nameInIndex: workspace_id2
      amount_cents:
        "$ref": "#/$defs/Int"
        ElasticGraph:
          type: Int!
          nameInIndex: amount_cents
      cost:
        anyOf:
        - "$ref": "#/$defs/Money"
        - type: 'null'
        ElasticGraph:
          type: Money
          nameInIndex: cost
      cost_currency_unit:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: cost_currency_unit
      cost_currency_name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: cost_currency_name
      cost_currency_symbol:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: cost_currency_symbol
      cost_currency_primary_continent:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: cost_currency_primary_continent
      cost_currency_introduced_on:
        anyOf:
        - "$ref": "#/$defs/Date"
        - type: 'null'
        ElasticGraph:
          type: Date
          nameInIndex: cost_currency_introduced_on
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      name_text:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 104857600
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name_text
      created_at:
        "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: DateTime!
          nameInIndex: created_at
      created_at_time_of_day:
        anyOf:
        - "$ref": "#/$defs/LocalTime"
        - type: 'null'
        ElasticGraph:
          type: LocalTime
          nameInIndex: created_at_time_of_day
      created_on:
        anyOf:
        - "$ref": "#/$defs/Date"
        - type: 'null'
        ElasticGraph:
          type: Date
          nameInIndex: created_on
      release_timestamps:
        type: array
        items:
          "$ref": "#/$defs/DateTime"
        ElasticGraph:
          type: "[DateTime!]!"
          nameInIndex: release_timestamps
      release_dates:
        type: array
        items:
          "$ref": "#/$defs/Date"
        ElasticGraph:
          type: "[Date!]!"
          nameInIndex: release_dates
      component_ids:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        ElasticGraph:
          type: "[ID!]!"
          nameInIndex: component_ids
      options:
        anyOf:
        - "$ref": "#/$defs/WidgetOptions"
        - type: 'null'
        ElasticGraph:
          type: WidgetOptions
          nameInIndex: options
      the_options:
        anyOf:
        - "$ref": "#/$defs/WidgetOptions"
        - type: 'null'
        ElasticGraph:
          type: WidgetOptions
          nameInIndex: the_opts
      inventor:
        anyOf:
        - "$ref": "#/$defs/Inventor"
        - type: 'null'
        ElasticGraph:
          type: Inventor
          nameInIndex: inventor
      named_inventor:
        anyOf:
        - "$ref": "#/$defs/NamedInventor"
        - type: 'null'
        ElasticGraph:
          type: NamedInventor
          nameInIndex: named_inventor
      weight_in_ng_str:
        "$ref": "#/$defs/LongString"
        ElasticGraph:
          type: LongString!
          nameInIndex: weight_in_ng_str
      weight_in_ng:
        "$ref": "#/$defs/JsonSafeLong"
        ElasticGraph:
          type: JsonSafeLong!
          nameInIndex: weight_in_ng
      tags:
        type: array
        items:
          allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        ElasticGraph:
          type: "[String!]!"
          nameInIndex: tags
      amounts:
        type: array
        items:
          "$ref": "#/$defs/Int"
        ElasticGraph:
          type: "[Int!]!"
          nameInIndex: amounts
      fees:
        type: array
        items:
          "$ref": "#/$defs/Money"
        ElasticGraph:
          type: "[Money!]!"
          nameInIndex: fees
      metadata:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/Untyped"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: Untyped
          nameInIndex: metadata
      __typename:
        type: string
        const: Widget
        default: Widget
    required:
    - id
    - workspace_id
    - amount_cents
    - cost
    - cost_currency_unit
    - cost_currency_name
    - cost_currency_symbol
    - cost_currency_primary_continent
    - cost_currency_introduced_on
    - name
    - name_text
    - created_at
    - created_at_time_of_day
    - created_on
    - release_timestamps
    - release_dates
    - component_ids
    - options
    - the_options
    - inventor
    - named_inventor
    - weight_in_ng_str
    - weight_in_ng
    - tags
    - amounts
    - fees
    - metadata
  WidgetOptions:
    type: object
    properties:
      size:
        anyOf:
        - "$ref": "#/$defs/Size"
        - type: 'null'
        ElasticGraph:
          type: Size
          nameInIndex: size
      the_size:
        anyOf:
        - "$ref": "#/$defs/Size"
        - type: 'null'
        ElasticGraph:
          type: Size
          nameInIndex: the_sighs
      color:
        anyOf:
        - "$ref": "#/$defs/Color"
        - type: 'null'
        ElasticGraph:
          type: Color
          nameInIndex: color
      is_draft:
        anyOf:
        - "$ref": "#/$defs/Boolean"
        - type: 'null'
        ElasticGraph:
          type: Boolean
          nameInIndex: is_draft
      __typename:
        type: string
        const: WidgetOptions
        default: WidgetOptions
    required:
    - size
    - the_size
    - color
    - is_draft
  WidgetWorkspace:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      widget:
        anyOf:
        - "$ref": "#/$defs/WorkspaceWidget"
        - type: 'null'
        ElasticGraph:
          type: WorkspaceWidget
          nameInIndex: widget
      __typename:
        type: string
        const: WidgetWorkspace
        default: WidgetWorkspace
    required:
    - id
    - name
    - widget
  WorkspaceWidget:
    type: object
    properties:
      id:
        allOf:
        - "$ref": "#/$defs/ID"
        - maxLength: 8191
        ElasticGraph:
          type: ID!
          nameInIndex: id
      created_at:
        anyOf:
        - "$ref": "#/$defs/DateTime"
        - type: 'null'
        ElasticGraph:
          type: DateTime
          nameInIndex: created_at
      __typename:
        type: string
        const: WorkspaceWidget
        default: WorkspaceWidget
    required:
    - id
    - created_at
