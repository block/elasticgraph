# This JSON schema file contains internal ElasticGraph metadata and should be considered private.
# The unversioned JSON schema file is public and intended to be provided to publishers.
#
# Generated by `rake schema_artifacts:dump`.
# DO NOT EDIT BY HAND. Any edits will be lost the next time the rake task is run.
---
"$schema": http://json-schema.org/draft-07/schema#
json_schema_version: 1
"$defs":
  ElasticGraphEventEnvelope:
    type: object
    properties:
      op:
        type: string
        enum:
        - upsert
      type:
        type: string
        enum:
        - Artist
        - Venue
      id:
        type: string
        maxLength: 8191
      version:
        type: integer
        minimum: 0
        maximum: 9223372036854775807
      record:
        type: object
      latency_timestamps:
        type: object
        additionalProperties: false
        patternProperties:
          "^\\w+_at$":
            type: string
            format: date-time
      json_schema_version:
        const: 1
      message_id:
        type: string
        description: The optional ID of the message containing this event from whatever
          messaging system is being used between the publisher and the ElasticGraph
          indexer.
    additionalProperties: false
    required:
    - op
    - type
    - id
    - version
    - json_schema_version
    if:
      properties:
        op:
          const: upsert
    then:
      required:
      - record
  Album:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      releasedOn:
        anyOf:
        - "$ref": "#/$defs/Date"
        - type: 'null'
        ElasticGraph:
          type: Date
          nameInIndex: releasedOn
      soldUnits:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: soldUnits
      tracks:
        type: array
        items:
          "$ref": "#/$defs/AlbumTrack"
        ElasticGraph:
          type: "[AlbumTrack!]!"
          nameInIndex: tracks
      __typename:
        type: string
        const: Album
        default: Album
    required:
    - name
    - releasedOn
    - soldUnits
    - tracks
  AlbumTrack:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      trackNumber:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: trackNumber
      lengthInSeconds:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: lengthInSeconds
      __typename:
        type: string
        const: AlbumTrack
        default: AlbumTrack
    required:
    - name
    - trackNumber
    - lengthInSeconds
  Artist:
    type: object
    properties:
      id:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      lifetimeSales:
        anyOf:
        - "$ref": "#/$defs/JsonSafeLong"
        - type: 'null'
        ElasticGraph:
          type: JsonSafeLong
          nameInIndex: lifetimeSales
      bio:
        anyOf:
        - "$ref": "#/$defs/ArtistBio"
        - type: 'null'
        ElasticGraph:
          type: ArtistBio
          nameInIndex: bio
      albums:
        type: array
        items:
          "$ref": "#/$defs/Album"
        ElasticGraph:
          type: "[Album!]!"
          nameInIndex: albums
      tours:
        type: array
        items:
          "$ref": "#/$defs/Tour"
        ElasticGraph:
          type: "[Tour!]!"
          nameInIndex: tours
      __typename:
        type: string
        const: Artist
        default: Artist
    required:
    - id
    - name
    - lifetimeSales
    - bio
    - albums
    - tours
  ArtistBio:
    type: object
    properties:
      yearFormed:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: yearFormed
      homeCountry:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: homeCountry
      description:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 104857600
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: description
      __typename:
        type: string
        const: ArtistBio
        default: ArtistBio
    required:
    - yearFormed
    - homeCountry
    - description
  Date:
    type: string
    format: date
  DateTime:
    type: string
    format: date-time
  Float:
    type: number
  GeoLocation:
    type: object
    properties:
      latitude:
        allOf:
        - "$ref": "#/$defs/Float"
        - minimum: -90
          maximum: 90
        ElasticGraph:
          type: Float!
          nameInIndex: lat
      longitude:
        allOf:
        - "$ref": "#/$defs/Float"
        - minimum: -180
          maximum: 180
        ElasticGraph:
          type: Float!
          nameInIndex: lon
      __typename:
        type: string
        const: GeoLocation
        default: GeoLocation
    required:
    - latitude
    - longitude
  ID:
    type: string
  Int:
    type: integer
    minimum: -2147483648
    maximum: 2147483647
  JsonSafeLong:
    type: integer
    minimum: -9007199254740991
    maximum: 9007199254740991
  Show:
    type: object
    properties:
      venueId:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: venueId
      attendance:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: attendance
      startedAt:
        anyOf:
        - "$ref": "#/$defs/DateTime"
        - type: 'null'
        ElasticGraph:
          type: DateTime
          nameInIndex: startedAt
      __typename:
        type: string
        const: Show
        default: Show
    required:
    - venueId
    - attendance
    - startedAt
  String:
    type: string
  Tour:
    type: object
    properties:
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      shows:
        type: array
        items:
          "$ref": "#/$defs/Show"
        ElasticGraph:
          type: "[Show!]!"
          nameInIndex: shows
      __typename:
        type: string
        const: Tour
        default: Tour
    required:
    - name
    - shows
  Venue:
    type: object
    properties:
      id:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/ID"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: ID
          nameInIndex: id
      name:
        anyOf:
        - allOf:
          - "$ref": "#/$defs/String"
          - maxLength: 8191
        - type: 'null'
        ElasticGraph:
          type: String
          nameInIndex: name
      location:
        anyOf:
        - "$ref": "#/$defs/GeoLocation"
        - type: 'null'
        ElasticGraph:
          type: GeoLocation
          nameInIndex: location
      capacity:
        anyOf:
        - "$ref": "#/$defs/Int"
        - type: 'null'
        ElasticGraph:
          type: Int
          nameInIndex: capacity
      __typename:
        type: string
        const: Venue
        default: Venue
    required:
    - id
    - name
    - location
    - capacity
