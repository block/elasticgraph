#!/usr/bin/env ruby

require "fileutils"

updated_code_filename = "#{__dir__}/../../tmp/updated_valid_time_zones.rb"

# Note: CI does not appear to have java 14 or 17 available, so we use java 11 here.
java_time_zones = `java --source 11 #{__dir__}/dump_time_zones.java`.split("\n")

::File.write(updated_code_filename, <<~EOS)
  # Copyright 2024 - 2025 Block, Inc.
  #
  # Use of this source code is governed by an MIT-style
  # license that can be found in the LICENSE file or at
  # https://opensource.org/licenses/MIT.
  #
  # frozen_string_literal: true

  module ElasticGraph
    class GraphQL
      module ScalarCoercionAdapters
        # The set of all valid time zones. We expect this set to align with the official IANA
        # list[^1][^2][^3], but ultimately we pass these time zones to the datastore and need
        # to enumerate all time zones it supports. Since Elasticsearch and OpenSearch run on the JVM and the
        # date format docs[^4] link to Java's `java.time.format.DateTimeFormatter` class, we
        # can conclude that they support the time zones that the java class supports. This set
        # is generated by `script/dump_time_zones`, which queries Java's `java.time.ZoneId`[^5]
        # class to get the set of time zones supported on the JVM.
        #
        # DO NOT EDIT BY HAND.
        #
        # [^1]: https://www.iana.org/time-zones
        # [^2]: https://en.wikipedia.org/wiki/Tz_database
        # [^3]: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
        # [^4]: https://www.elastic.co/guide/en/elasticsearch/reference/7.10/mapping-date-format.html#custom-date-formats
        # [^5]: https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html
        VALID_TIME_ZONES = %w[
          #{java_time_zones.join("\n        ")}
        ].to_set
      end
    end
  end
EOS

verify_code_command = %(ruby -r#{updated_code_filename} -e "puts ElasticGraph::GraphQL::ScalarCoercionAdapters::VALID_TIME_ZONES.size")
verify_code_output = `#{verify_code_command} 2>&1`

if verify_code_output.to_i < 600 # As of Nov 2022 there are 601 time zones.
  abort <<~EOS.strip
    It appears that the generated code is invalid. Check `#{updated_code_filename}` to see what was generated.

    Output from `#{verify_code_command}`:

    #{verify_code_output}
  EOS
end

if ARGV.include?("--print")
  puts ::File.read(updated_code_filename)
else
  filename = "#{__dir__}/../lib/elastic_graph/graphql/scalar_coercion_adapters/valid_time_zones.rb"
  ::FileUtils.cp(updated_code_filename, filename)
  puts "Timezones have been written to `#{filename}`"
end

# if ARGV.include?("--verify")
#   existing_contents = ::File.exist?(filename) ? ::File.read(filename) : ""
#
#   if existing_contents == valid_timezones_ruby_code
#     puts "`#{filename}` is up to date!"
#   else
#     diff = `git diff --no-index #{"--color" if $stdout.tty?} --binary #{updated_code_filename} #{filename}`
#
#     abort <<~EOS.strip
#       `#{filename}` is not up to date! Rerun `script/dump_time_zones` to correct.
#
#       #{diff}
#     EOS
#   end
# else
# end
