module ElasticGraph
  class GraphQL
    module Aggregation
      module Resolvers
        class AggregatedValuesSupertype
          attr_reader aggregation_name: ::String
          attr_reader bucket: ::Hash[::String, untyped]
          attr_reader field_path: ::Array[PathSegment]

          def initialize: (
            aggregation_name: ::String,
            bucket: ::Hash[::String, untyped],
            field_path: ::Array[PathSegment]
          ) -> void

          def self.new: (
            aggregation_name: ::String,
            bucket: ::Hash[::String, untyped],
            field_path: ::Array[PathSegment]
          ) -> instance | (
            ::String,
            ::Hash[::String, untyped],
            ::Array[PathSegment]
          ) -> instance

          def with: (
            ?aggregation_name: ::String,
            ?bucket: ::Hash[::String, untyped],
            ?field_path: ::Array[PathSegment]
          ) -> instance
        end

        class AggregatedValues < AggregatedValuesSupertype
          include _GraphQLResolvableWithLookahead
        end
      end
    end
  end
end
