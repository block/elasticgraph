module ElasticGraph
  class GraphQL
    class DatastoreQuerySupertype
      attr_reader search_index_definitions: ::Array[DatastoreCore::_IndexDefinition]
      attr_reader aggregations: ::Hash[::String, Aggregation::Query]
      attr_reader document_paginator: DatastoreQuery::DocumentPaginator
      attr_reader total_document_count_needed: bool
    end

    # Note: this is a partial signature definition
    class DatastoreQuery < DatastoreQuerySupertype
      def shard_routing_values: () -> ::Array[::String]?
      def merge_with: (**untyped) -> DatastoreQuery
      def search_index_expression: () -> ::String
      def with: (**untyped) -> DatastoreQuery
      def effective_size: () -> ::Integer

      def to_datastore_msearch_header_and_body: () -> [::Hash[::String, untyped], ::Hash[::String, untyped]]

      class Builder
        def self.new: (
          runtime_metadata: SchemaArtifacts::RuntimeMetadata::Schema,
          logger: ::Logger,
          **untyped
        ) -> Builder

        def new_query: (**untyped) -> DatastoreQuery
      end
    end
  end
end
