module ElasticGraph
  class GraphQL
    module Resolvers
      type fieldArgs = ::Hash[::String, untyped]

      interface _Resolvable
        def resolve: (
          field: Schema::Field,
          object: untyped,
          context: ::GraphQL::Query::Context,
          args: fieldArgs,
          lookahead: ::GraphQL::Execution::Lookahead
        ) -> untyped
      end

      interface _Resolver
        def initialize: (
          elasticgraph_graphql: GraphQL,
          config: ::Hash[::String, untyped]
        ) -> void

        include _Resolvable
      end

      class Interface
        include _Resolver
      end
    end
  end
end
