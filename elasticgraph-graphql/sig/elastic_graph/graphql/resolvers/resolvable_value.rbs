module ElasticGraph
  class GraphQL
    module Resolvers
      module ResolvableValue
        def self.new: (*Symbol) ?{ () [self: self] -> void } -> ResolvableValueClass

        include _GraphQLResolvableWithoutLookahead
        attr_reader schema: Schema

        private

        def args_to_canonical_form: (::Hash[::String, untyped]) -> ::Hash[::Symbol, untyped]
        def canonical_name_for: (::String | ::Symbol, ::String) -> ::Symbol
      end

      class ResolvableValueClass
        include ResolvableValue
      end
    end
  end
end
