# Copyright 2024 - 2025 Block, Inc.
#
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT.
#
# frozen_string_literal: true

require "elastic_graph/errors"
require "elastic_graph/schema_artifacts/from_disk"
require "elastic_graph/support/from_yaml_file"

module ElasticGraph
  # Namespace for all code related to ElasticGraph schema artifacts.
  # Schema artifacts are generated by {SchemaDefinition} and dumped to disk.
  # Later, they are used to power ElasticGraph.
  module SchemaArtifacts
    extend Support::FromYamlFile

    # Builds a `SchemaArtifacts::FromDisk` instance using the provided YAML settings.
    #
    # @param parsed_yaml [Hash<String, Object>] hash parsed from a settings YAML file
    # @return [FromDisk]
    def self.from_parsed_yaml(parsed_yaml)
      schema_artifacts = parsed_yaml.fetch("schema_artifacts") do
        raise Errors::ConfigError, "Config is missing required key `schema_artifacts`."
      end

      if (extra_keys = schema_artifacts.keys - ["directory"]).any?
        raise Errors::ConfigError, "Config has extra `schema_artifacts` keys: #{extra_keys}"
      end

      directory = schema_artifacts.fetch("directory") do
        raise Errors::ConfigError, "Config is missing required key `schema_artifacts.directory`."
      end

      FromDisk.new(directory)
    end
  end
end
