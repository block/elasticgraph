module ElasticGraph
  module SchemaArtifacts
    module RuntimeMetadata
      module InterfaceVerifier
        def self.verify: (extensionClass, against: extensionClass, constant_name: ::String) -> void

        private

        def self.verify_methods: (::String, extensionClass, extensionClass) -> ::Array[::String]
        def self.list_instance_interface_methods: (extensionClass) -> ::Array[::Symbol]
        def self.parameters_match?: (extensionClass, extensionClass, ::Symbol) -> bool
        def self.signature_code_for: (extensionClass, ::Symbol) -> ::String
      end
    end
  end
end
