module ElasticGraph
  module SchemaDefinition
    module Indexing
      module FieldType
        class ObjectSuperType
          attr_reader type_name: ::String
          attr_reader subfields: ::Array[Field]
          attr_reader mapping_options: Mixins::HasTypeInfo::optionsHash
          attr_reader json_schema_options: Mixins::HasTypeInfo::optionsHash
          attr_reader doc_comment: ::String?
          attr_reader schema_def_state: State

          def initialize: (
            type_name: ::String,
            subfields: ::Array[Field],
            mapping_options: Mixins::HasTypeInfo::optionsHash,
            json_schema_options: Mixins::HasTypeInfo::optionsHash,
            doc_comment: ::String?,
            schema_def_state: State
          ) -> void

          def with: (
            ?type_name: ::String,
            ?subfields: ::Array[Field],
            ?mapping_options: Mixins::HasTypeInfo::optionsHash,
            ?json_schema_options: Mixins::HasTypeInfo::optionsHash,
            ?doc_comment: ::String?,
            schema_def_state: State
          ) -> Object
        end

        class Object < ObjectSuperType
          include _FieldType
          include Support::_MemoizableDataClass

          @to_mapping: ::Hash[::String, untyped]?
          @to_json_schema: ::Hash[::String, untyped]?

          private

          def json_schema_typename_field: () -> ::Hash[::String, untyped]
          def validate_sourced_fields_have_no_json_schema_overrides: (::Array[Field]) -> void
        end
      end
    end
  end
end
