module ElasticGraph
  module Support
    module Config
      def self.define: [T] (*::Symbol) ?{ (ClassMethods[T]) -> void } -> T

      module ClassMethods[T]: ::Class
        attr_reader validator: Support::JSONSchema::Validator
        attr_reader path: ::String

        def json_schema: (at: ::String, **untyped) -> void
        def from_parsed_yaml: (parsedYamlSettings) -> T?
        def from_parsed_yaml!: (parsedYamlSettings) -> T
        def raise_invalid_config: (::String) -> bot
        def new_without_validation: (**untyped) -> T
      end

      module InstanceMethods: Data
        def initialize: (**untyped) -> void

        private

        def convert_values: (**untyped) -> ::Hash[::Symbol, untyped]
      end
    end
  end
end
