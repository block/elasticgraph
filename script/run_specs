#!/usr/bin/env bash

# This script runs all specs from all the elasticgraph gems. Any arguments passed to this script
# will be appended to the `rspec` command.

# Print a trace of simple commands.
# Verbose form of `set -x`.
set -o xtrace

# Find the spec dirs of all gems, except for ones we exclude due to being too slow (relative to their importance).
#
# - elasticgraph-local: this is used locally to run Elasticsearch/OpenSearch via docker. The tests boot them and
#   are quite slow (~10 seconds each).
#
# Note: we use this technique instead of RSpec tagging (e.g. with `:slow`) because:
# - If we exclude individual specs it messes up our code coverage check (excluding whole gems does not!)
# - The specific gems we want to exclude are ones we are OK excluding all of.
spec_dirs=$(script/list_eg_gems.rb | grep -v elasticgraph-local)

# Avoid a connection issue if a prior run was interrupted. More info:
# https://github.com/briandunn/flatware/issues/68
rm -f flatware-sink

# Limit the number of workers to 16. On some really beefy CI worker hosts, we've seen
# flatware default to 96 workers (due to the host having 96 vCPUs!), but that's overkill,
# and using too many workers can perform worse.
#
# Note: `Etc.nprocessors` is what flatware uses internally for the default number of workers.
worker_count=$(ruby -retc -e "puts [16, Etc.nprocessors].min")

bundle exec flatware rspec $spec_dirs -w $worker_count "$@"
